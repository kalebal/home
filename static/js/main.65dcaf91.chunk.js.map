{"version":3,"sources":["Header.js","About.js","Experience.js","Contact.js","LinkTwig.js","App.js","reportWebVitals.js","index.js"],"names":["Header","contactRef","id","className","onClick","ref","current","scrollIntoView","About","refProp","alt","src","Experience","useState","projectData","setProjectData","useEffect","fetch","headers","then","res","json","data","catch","err","map","proj","name","ProjectCard","description","link","imgs","JSON","parse","href","Collapse","collapsed","children","isCollapsed","setIsCollapsed","aria-expanded","Contact","LinkTwig","App","refs","aboutRef","useRef","expRef","executeScroll","behavior","block","rel","target","type","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.65dcaf91.chunk.js","sourcesContent":["\nexport default function Header({ contactRef }) {\n  const scroll = (ref) => contactRef.current.scrollIntoView();\n  return (\n    <header>\n      <div id=\"intro\">\n        <p> Hi, my name is</p>\n        <h1>Kaleb Lyda</h1>\n        <p>I build things for the web. </p>\n        <p>I’m a software engineer based in the Greensboro, NC area who specializes in building (and sometimes designing) engaging user experiences.\n        </p>\n        <button className=\"primary-button\" onClick={scroll}> Get in touch </button>\n      </div>\n    </header>\n  );\n}\n\n","export default function About({ refProp }) {\n  return(\n    <section id=\"about\">\n      <div id=\"about-text\" ref={refProp}>\n        <h2> 0.1 About Me </h2>\n        <p>\n          Hello! My name is Kaleb Lyda and I enjoy creating beautiful things. My interest in software engineering started in 2018 when I used a Java library called Processing to make sketches for art projects.\n          <br />\n          Now I’m using my background in art to think outside the box when crafting exciting experiences that live on the web.\n          <br />\n          Here’s a few technologies I’ve been using recently:\n        </p>\n        <ul className=\"about-ul\">\n          <li className=\"about-li\"> Javascript </li>\n          <li className=\"about-li\"> React</li>\n          <li className=\"about-li\"> Node.js </li>\n          <li className=\"about-li\"> Typescript </li>\n          <li className=\"about-li\"> Java </li>\n        </ul>\n      </div>\n      <div className=\"photo-container\">\n        <div id=\"photo-border\"></div>\n        <img id=\"profile-picture\" alt=\"\" src=\"https://avatars.githubusercontent.com/u/38890546?v=4\" />\n      </div>\n    </section>\n  );\n}\n","import React, { useState, useEffect } from 'react';\n\nexport default function Experience({ refProp }) {\n  const [projectData, setProjectData] = useState(\"\");\n\n  // fetches local JSON data (in public folder)\n  useEffect(() => {\n    fetch('projects.json', {\n      headers : {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n       }}).then((res) => {\n      return res.json();\n    })\n    .then((data) => {\n      setProjectData(data);\n    })\n    .catch((err) => {\n      setProjectData(null);\n    });\n  }, []);\n\n  if (projectData) {\n    return(\n      <section id=\"exp\" ref={refProp}>\n        <h2> 0.2 Some Things I've Done </h2>\n        <div className=\"exp-container\">\n          <ul className=\"exp-ul\">\n              {projectData.map((proj) => {\n                return (\n                  <li key={proj.name} className=\"exp-li\">\n                    <Collapse\n                    name={proj.name}>\n                     <ProjectCard\n                        description={proj.description}\n                        link={proj.link}\n                        imgs={proj.imgs} />\n                    </Collapse>\n                  </li>\n                  );\n              })}\n\n          </ul>\n\n        </div>\n      </section>\n    );\n  } else {\n    return (\n      <section id=\"exp\" ref={refProp}>\n        <h2> 0.2 Some Things I've Done </h2>\n        <div className=\"exp-container\">\n          <p> Sorry, seems like there's an issue loading my project data. They're still up on Github though!</p>\n        </div>\n      </section>\n    );\n  }\n}\n\nfunction ProjectCard({name, description, imgs, link}) {\n  imgs = JSON.parse(imgs);\n  return (\n    <div className=\"project-card\">\n      <div className=\"project-card-text\">\n          <p> {description}</p>\n           <button className=\"primary-button\">\n           <a href={link}>Check it out </a></button>\n      </div>\n      {imgs[0] && <img className=\"project-img\" src={imgs[0]} alt=\"\" />}\n\n    </div>\n  );\n};\n\nconst Collapse = ({ name, collapsed = true, children }) => {\n  const [isCollapsed, setIsCollapsed] = useState(collapsed);\n\n  return (\n    <>\n      <button\n        className=\"collapse-button\"\n        onClick={() => setIsCollapsed(!isCollapsed)}\n      >\n        {name}\n      </button>\n      <div\n        className={`collapse-content ${isCollapsed ? 'collapsed' : 'expanded'}`}\n        aria-expanded={isCollapsed}\n      >\n        {children}\n      </div>\n    </>\n  );\n};\n","export default function Contact({ refProp }) {\n  return (\n    <section id=\"contact\" ref={refProp}>\n      <h2> 0.3 Contact </h2>\n      <p> Find me on <a href=\"https://github.com/kalebal\">Github</a> and <a href=\"https://www.linkedin.com/in/kaleb-lyda\">LinkedIn</a> or email me at: <br />\n      kaleblyda14 [at] gmail (dot) com\n      </p>\n    </section>\n  );\n}\n","/* eslint-disable jsx-a11y/anchor-has-content */\nexport default function LinkTwig() {\n   return (\n     <div id=\"link-twig\">\n      <a href=\"https://github.com/kalebal\"><i className=\"fab fa-github\"></i></a>\n      <a href=\"https://www.linkedin.com/in/kaleb-lyda\"><i className=\"fab fa-linkedin\"></i></a>\n      <div id=\"twig\"></div>\n     </div>\n   );\n}","import React, { useRef } from 'react'\nimport './App.css';\nimport Header from './Header';\nimport About from './About';\nimport Experience from './Experience';\nimport Contact from './Contact';\nimport LinkTwig from './LinkTwig';\n\nfunction App() {\n  const refs = {\n    aboutRef: useRef(null),\n    expRef: useRef(null),\n    contactRef: useRef(null),\n  }\n\n  //Scrolls down to specific section, ID'd by ref object\n  const executeScroll = (ref) => refs[ref].current.scrollIntoView({behavior: \"smooth\", block: \"center\"});\n\n  return (\n    <div className=\"App\">\n      <div id=\"nav\">\n        <ul className=\"nav-ul\">\n          <li className=\"nav-li\">\n            <button\n            onClick={() => executeScroll(\"aboutRef\")}>\n              01. About\n            </button></li>\n          <li className=\"nav-li\">\n            <button\n            onClick={() => executeScroll(\"expRef\")}>\n              02. Experience\n            </button></li>\n          <li className=\"nav-li\">\n            <button\n            onClick={() => executeScroll(\"contactRef\")}>\n              03. Contact\n            </button></li>\n          <li className=\"nav-li\">\n            <a href=\"https://github.com/kalebal/home/blob/eb88cbe66324d927e5fefedbf3df3cc045c12190/src/lib/resume.pdf\"\n            className=\"primary-button\"\n            rel=\"noreferrer\"\n            target=\"_blank\"\n            type=\"application/pdf\">\n              Resume\n            </a></li>\n        </ul>\n      </div>\n      <Header contactRef={refs.contactRef}/>\n      <About refProp={refs.aboutRef}/>\n      <Experience refProp={refs.expRef}/>\n      <Contact refProp={refs.contactRef}/>\n      <LinkTwig />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}